<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ac.liverpool.forum.mapper.MessageMapper">

    <resultMap id="messageMap" type="ac.liverpool.forum.entity.VO.Message">
        <id column="id" property="id"/>
        <result column="sender_id" property="senderId"/>
        <result column="receiver_id" property="receiverId"/>
        <result column="content" property="content"/>
        <result column="is_read" property="isRead"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="is_deleted" property="isDeleted"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO message (
            sender_id, receiver_id, content, is_read, 
            create_time, update_time, is_deleted
        ) VALUES (
            #{senderId}, #{receiverId}, #{content}, #{isRead}, 
            #{createTime}, #{updateTime}, #{isDeleted}
        )
    </insert>

    <update id="update">
        UPDATE message
        SET 
            is_read = #{isRead},
            update_time = #{updateTime}
        WHERE 
            id = #{id}
    </update>

    <select id="getMessages" resultMap="messageMap">
        SELECT * FROM message
        WHERE 
            ((sender_id = #{userId} AND receiver_id = #{targetUserId})
            OR 
            (sender_id = #{targetUserId} AND receiver_id = #{userId}))
            AND is_deleted = 0
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="countMessages" resultType="int">
        SELECT COUNT(*) FROM message
        WHERE 
            ((sender_id = #{userId} AND receiver_id = #{targetUserId})
            OR 
            (sender_id = #{targetUserId} AND receiver_id = #{userId}))
            AND is_deleted = 0
    </select>

    <update id="markAsRead">
        UPDATE message
        SET 
            is_read = 1,
            update_time = NOW()
        WHERE 
            receiver_id = #{userId}
            AND ((sender_id = #{user1Id} AND receiver_id = #{user2Id})
                OR (sender_id = #{user2Id} AND receiver_id = #{user1Id}))
            AND is_read = 0
    </update>
</mapper> 