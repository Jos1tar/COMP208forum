<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ac.liverpool.forum.mapper.PostsMapper">


    <select id="list" resultType="ac.liverpool.forum.entity.Posts">
        SELECT p.*, u.username
        FROM posts p
        JOIN users u ON p.user_id = u.id
        <where>
            p.is_deleted = false
            <if test="keyword != null and keyword != ''">
                AND p.title LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="begin != null and end != null">
                AND p.created_at BETWEEN #{begin} AND #{end}
            </if>
        </where>
        ORDER BY
        <if test="orderByLikes"> p.likes DESC, </if>
        p.created_at DESC
    </select>

    <insert id="insertPost" parameterType="ac.liverpool.forum.entity.Posts"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO posts(user_id, username, title, content, created_at)
        VALUES(#{userId}, #{username}, #{title}, #{content}, #{createdAt})
    </insert>

    <insert id="insertPostImages">
        INSERT INTO post_images(post_id, image_url, sort_order, created_at)
        VALUES
        <foreach collection="imageUrls" item="url" index="index" separator=",">
            (#{postId}, #{url}, #{index}, NOW())
        </foreach>
    </insert>


   <!-- &lt;!&ndash; 获取用户互动过的帖子ID &ndash;&gt;
    <select id="getUserInteractedPostIds" resultType="java.lang.Long">
        SELECT DISTINCT p.id
        FROM posts p
                 LEFT JOIN likes l ON p.id = l.target_id AND l.type = 'post'
                 LEFT JOIN comments c ON p.id = c.post_id
        WHERE p.user_id = #{userId}
           OR l.user_id = #{userId}
           OR c.user_id = #{userId}
    </select>

    &lt;!&ndash; 获取帖子的互动用户 &ndash;&gt;
    <resultMap id="postInteractionMap" type="java.util.HashMap">
        <id column="post_id" property="post_id" javaType="java.lang.Long"/>
        <result column="interacting_users" property="interacting_users" javaType="java.lang.String"/>
    </resultMap>

    <select id="getPostInteractions" resultMap="postInteractionMap">
        SELECT
            p.id as post_id,
            GROUP_CONCAT(DISTINCT user_id) as interacting_users
        FROM posts p
                 LEFT JOIN (
            SELECT target_id as post_id, user_id
            FROM likes
            WHERE type = 'post'
            UNION
            SELECT post_id, user_id
            FROM comments
        ) interactions ON p.id = interactions.post_id
        WHERE p.user_id = #{userId}
           OR interactions.user_id = #{userId}
        GROUP BY p.id
    </select>

    &lt;!&ndash; 根据ID列表批量查询帖子 &ndash;&gt;
    <select id="getPostsByIds" resultType="ac.liverpool.forum.model.Post">
        SELECT p.*, u.username as author_name
        FROM posts p
        JOIN users u ON p.user_id = u.id
        WHERE p.id IN
        <foreach collection="postIds" item="postId" open="(" separator="," close=")">
            #{postId}
        </foreach>
        AND p.is_deleted = false
        ORDER BY FIELD(p.id,
        <foreach collection="postIds" item="postId" separator=",">
            #{postId}
        </foreach>
        )
    </select>-->
</mapper>
